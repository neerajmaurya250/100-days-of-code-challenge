using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.IO;

namespace Text_Editor
{
    public partial class Form1 : Form
    {
        String path = "";

        public Form1()
        {
            InitializeComponent();
        }

        private void newToolStripMenuItem_Click(object sender, EventArgs e)
        {
            txtedit.Clear();
        }

        private void exitToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void openToolStripMenuItem_Click(object sender, EventArgs e)
        {
            DialogResult openResult = openFileDialog1.ShowDialog();
            if (openResult == DialogResult.OK)
            {
                path = openFileDialog1.FileName;
                try
                {
                    StreamReader fileOpen = new StreamReader(path);
                    String contents = fileOpen.ReadToEnd();
                    fileOpen.Close();
                    txtedit.Text = contents;
                }
                catch (IOException ioe)
                {
                    MessageBox.Show("Error opening file: " + ioe.Message);
                }
            }
        }

        private void saveToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (path == String.Empty)
            {
                saveAsToolStripMenuItem_Click(sender, e);
            }
            else
            {
                try
                {
                    StreamWriter sw = new StreamWriter(path);
                    sw.Write(txtedit.Text);
                    sw.Close();
                }
                catch (IOException ioe)
                {
                    MessageBox.Show("Error saving file: " + ioe.Message);
                }
            }
        }

        private void undoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            txtedit.Undo();
        }

        private void cutToolStripMenuItem_Click(object sender, EventArgs e)
        {
            txtedit.Cut();
        }

        private void copyToolStripMenuItem_Click(object sender, EventArgs e)
        {
            txtedit.Copy();
        }

        private void pasteToolStripMenuItem_Click(object sender, EventArgs e)
        {
            txtedit.Paste();
        }

        private void selectAllToolStripMenuItem_Click(object sender, EventArgs e)
        {
            txtedit.SelectAll();
        }

        private void findToolStripMenuItem_Click(object sender, EventArgs e)
        {

        }

        private void wordWrapToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (wordWrapToolStripMenuItem.Checked == true)
            {
                txtedit.WordWrap = true;
            }
            else
            {
                txtedit.WordWrap = false;
            }


        }

        private void fontToolStripMenuItem_Click(object sender, EventArgs e)
        {
            DialogResult fontResult = fontDialog1.ShowDialog();
            if (fontResult == DialogResult.OK)
            {
                txtedit.Font = fontDialog1.Font;
               
            }
        }

        private void saveAsToolStripMenuItem_Click(object sender, EventArgs e)
        {
            DialogResult saveResult = saveFileDialog1.ShowDialog();
            if (saveResult == DialogResult.OK)
            {
                path = saveFileDialog1.FileName;
                try
                {
                    StreamWriter sw = new StreamWriter(path);
                    sw.Write(txtedit.Text);
                    sw.Close();
                }
                catch (IOException ioe)
                {
                    MessageBox.Show("Error saving file: " + ioe.Message);
                }
            }
        }
    }
}
